@using YumBlazor.Services;
@inject AuthenticationStateProvider authenticationStateProvider;
@inject YumBlazor.Services.SharedStateService sharedStateService;
@inject IRepository<ShoppingCart> shoppingCartRepository;	

<nav class="navbar navbar-expand-md navbar-dark bg-dark pb-4 pt-4">
	<div class="container-fluid">
		<a class="navbar-brand" href="">
			<img src="/lib/images/Logo.png"  width="30" height="24">
			YumBlazor
		</a>
		<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
				aria-controls="navbarCollapse" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="navbarCollapse">
			<ul class="navbar-nav me-auto mb-2 mb-md-0">
				<li class="nav-item mx-2">
					<NavLink class="nav-link" href="">
						<span class="bi bi-house-door" aria-hidden="true"></span> Home
					</NavLink>
				</li>
				<li class="nav-item mx-2">
					<NavLink class="nav-link" href="/cart">
						<span class="bi bi-cart3" aria-hidden="true"></span> Cart
                        (@sharedStateService.TotalCartCount)
					</NavLink>
				</li>
				<li class="nav-item mx-2">
					<NavLink class="nav-link" href="/order/list">
						<span class="bi bi-card-list" aria-hidden="true"></span> Order List
					</NavLink>
				</li>
			</ul>
			<ul class="d-flex navbar-nav mb-2 mb-md-0">
				<AuthorizeView>
					<Authorized>
						<li class="nav-item">
							<NavLink class="nav-link p-2" href="Account/Manage">
								Welcome, @context?.User?.Identity?.Name
							</NavLink>
						</li>
						<li class="nav-item">
							<form action="Account/Logout" method="post">
								<AntiforgeryToken />
								<input type="hidden" name="ReturnUrl" value="" />
								<button type="submit" class="nav-link btn btn-success">
									<span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
								</button>
							</form>
						</li>
					</Authorized>
		            <NotAuthorized>
						<li class="nav-item">
							<NavLink class="nav-link" href="Account/Register">
								<span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
							</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link btn btn-success" href="Account/Login">
								<span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
							</NavLink>
						</li>
					</NotAuthorized>
				</AuthorizeView>
			</ul>
		</div>
	</div>
</nav>

@code{
	protected override async Task OnInitializedAsync()
	{
		sharedStateService.OnChange += OnSharedStateChange;
		await GetInitialCount();

	}

	private void OnSharedStateChange()
	{
		InvokeAsync(StateHasChanged);
	}	

	public async Task GetInitialCount(){
			var user = (await authenticationStateProvider.GetAuthenticationStateAsync()).User;
			if (user.Identity.IsAuthenticated)
				{
					var userId = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
					var cart = (await shoppingCartRepository.GetAllAsync()).Where(c => c.UserId == userId).FirstOrDefault();
					if (cart != null)
					{
						sharedStateService.TotalCartCount = (cart.Count);
					}
					else
					{
						sharedStateService.TotalCartCount = 0;
					}
				}
			else
				{
					sharedStateService.TotalCartCount = 0;
				}
		}

	public void Dispose()
	{
		sharedStateService.OnChange -= OnSharedStateChange;
	}	
}