@page "/email"
@inject IGraphHelperService GraphHelperService  
@inject ISnackbar Snackbar

<PageTitle>Test Email</PageTitle>
@if (IsProcessing)
{
    <MudPaper Class="d-flex flex-column align-items-center justify-center" Style="height: 100vh; width: 100%;">
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Diameter="100" />
    </MudPaper>
}
else
{
    <MudContainer MaxWidth="MaxWidth.False" Class="d-flex justify-center mt-6">
        <MudPaper Class="p-6" Style="width: 80%; max-width: 1000px;">
            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4 d-flex align-center justify-center">
                <MudIcon Icon="@Icons.Material.Filled.Email" Size="Size.Medium" Color="Color.Primary" Class="me-2" />
                Test Email Page
            </MudText>


            <MudStack Spacing="2" Class="mb-4">
                <MudText Typo="Typo.subtitle1">Compose your email</MudText>

                @if (_isDarkMode)
                {
                    <style>
                        .rz-html-editor-content {
                            background-color: #2a2a2a !important;
                            color: #e0e0e0 !important;
                        }
                    </style>
                }

                <RadzenHtmlEditor @bind-Value="emailText" Style="height: 300px; border: 1px solid rgba(0, 0, 0, 0.23); border-radius: 4px; padding: 8px;" />

                <MudStack Direction="Row" Justify="Justify.FlexEnd">
                    <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" OnClick="SendTestEmail">
                        <MudIcon Icon="@Icons.Material.Filled.Send" Class="me-2" />
                        Send Test Email
                    </MudButton>
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudContainer>
}

@code {
    public bool IsProcessing { get; set; } = false;

    [CascadingParameter]
    private bool _isDarkMode { get; set; }

    private string emailText = string.Empty;

    private async Task SendTestEmail()
    {
        IsProcessing = true;

        try
        {
            await GraphHelperService.SendEmailAsync(
                "Test Email from YumBlazor",
                emailText
            );

            Console.WriteLine("Email sent!");
            Snackbar.Add("Email sent successfully!", Severity.Success);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error sending email: {ex.Message}");
            Snackbar.Add($"Error sending email: {ex.Message}", Severity.Error);
        }
        finally
        {
            IsProcessing = false;
        }
    }

}
